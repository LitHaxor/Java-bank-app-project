/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BankGUI;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author offic
 */
public class depositMenu extends javax.swing.JDialog {

    private final Customer customer;
    
    /**
     * Creates new form depositMenu
     */
    public depositMenu(java.awt.Frame parent, boolean modal, Customer customer) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.customer = customer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        depositLabel = new javax.swing.JLabel();
        depositField = new javax.swing.JTextField();
        DepositButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        depositLabel.setText("Depsoit Amount");
        getContentPane().add(depositLabel);

        depositField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositFieldActionPerformed(evt);
            }
        });
        getContentPane().add(depositField);

        DepositButton.setText("Deposit");
        DepositButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DepositButtonActionPerformed(evt);
            }
        });
        getContentPane().add(DepositButton);

        CancelButton.setText("Cancel");
        getContentPane().add(CancelButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void depositFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depositFieldActionPerformed

    private void DepositButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DepositButtonActionPerformed
        StringBuilder warnings = new StringBuilder();
        if(depositField.getText().isEmpty()){
            warnings.append("Deposit amount cannot be empty!");
        }
        else {
            double amount = 0;
            try  {
                amount = Double.parseDouble(depositField.getText());
                int result = JOptionPane.showConfirmDialog(this, "Deposit "+ amount + "BDT to this account?\n"
                        + "Interest: "+ customer.getAccount().getInterest()/100 *amount+ " BDT");
                if(result == JOptionPane.OK_OPTION){
                    customer.getAccount().deposit(amount);
                    this.dispose();
                }
                
            }
            catch(NumberFormatException ex){
                warnings.append("Deposit amount is not number");
            }
        }
        if(warnings.length() > 0){
            JOptionPane.showMessageDialog(this,warnings.toString(), "deposit failed", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_DepositButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton DepositButton;
    private javax.swing.JTextField depositField;
    private javax.swing.JLabel depositLabel;
    // End of variables declaration//GEN-END:variables
}
